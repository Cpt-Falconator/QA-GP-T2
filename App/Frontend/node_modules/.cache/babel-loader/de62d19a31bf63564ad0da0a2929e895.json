{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\lisan\\\\webpage-gp\\\\QA-GP-T2\\\\App\\\\frontend\\\\src\\\\Components\\\\Create-Account-page\\\\CreateAccount.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Redirect } from 'react';\nimport axios from 'axios';\n\nconst CreateAccount = props => {\n  _s();\n\n  // setting the states\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [qaEmail, setQaEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [cohort, setCohort] = useState(\"\");\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n\n  const post_createAccount = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:8081/trainee/create\", {\n      username,\n      firstName: firstname,\n      secondName: lastname,\n      cohort: cohort,\n      password: password1,\n      traineeEmail: qaEmail\n    }).then(response => {\n      console.log(response);\n      props.history.push(\"/Login\");\n    }).catch(error => {\n      console.log(error);\n    });\n  }; //If password1 and password2 is exactly the same, then setPasswordTheSame as true - If it is false, we need to show an error on the page, if it is true, we can send this to the database.\n\n\n  const isPasswordSame = (password1, password2, e) => {\n    if (password1 === password2) {\n      post_createAccount(e);\n    } else {\n      alert(\"Your passwords do not match, please try again\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signupDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"signupHeading\",\n        children: \"Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"ml-3\",\n          id: \"signupForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"signupInput\",\n            type: \"text\",\n            id: \"first-name\",\n            onChange: e => firstName(e),\n            placeholder: \"Enter your first name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 167\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"signupInput\",\n            type: \"text\",\n            id: \"last-name\",\n            onChange: e => lastName(e),\n            placeholder: \"Enter your last name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 164\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"signupInput\",\n            type: \"text\",\n            id: \"qa_email\",\n            onChange: e => updateEmail(e),\n            placeholder: \"Enter your QA Email address\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 173\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"signupInput\",\n            type: \"text\",\n            id: \"username\",\n            onChange: e => updateUsername(e),\n            placeholder: \"Enter your username\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 168\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"signupInput\",\n            name: \"cohort\",\n            id: \"cohort\",\n            onChange: e => cohort(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Dev Ops\",\n              children: \"Dev Ops\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Cloud Native\",\n              children: \"Cloud Native\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Software Engineer\",\n              children: \"Software Engineer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"signupInput\",\n            type: \"password\",\n            id: \"password1\",\n            onChange: e => updatePassword1(e),\n            placeholder: \"Enter your password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 174\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"signupInput\",\n            type: \"password\",\n            id: \"password2\",\n            onChange: e => updatePassword2(e),\n            placeholder: \"Enter your password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 174\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            id: \"signupButton\",\n            type: \"submit\",\n            onClick: e => isPasswordSame(password1, password2, e),\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateAccount, \"5/+nun5KDGUMIPPs9NCF1PRj8rs=\");\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["C:/Users/lisan/webpage-gp/QA-GP-T2/App/frontend/src/Components/Create-Account-page/CreateAccount.jsx"],"names":["React","useState","Redirect","axios","CreateAccount","props","firstname","setFirstname","lastname","setLastname","qaEmail","setQaEmail","username","setUsername","cohort","setCohort","password1","setPassword1","password2","setPassword2","post_createAccount","e","preventDefault","post","firstName","secondName","password","traineeEmail","then","response","console","log","history","push","catch","error","isPasswordSame","alert","lastName","updateEmail","updateUsername","target","value","updatePassword1","updatePassword2"],"mappings":"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","sourcesContent":["import React, {useState, Redirect} from 'react'\r\nimport axios from 'axios';\r\n\r\nconst CreateAccount = (props) => {\r\n\r\n    // setting the states\r\n    const [firstname, setFirstname] = useState(\"\");\r\n    const [lastname, setLastname] = useState(\"\");\r\n    const [qaEmail, setQaEmail] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [cohort, setCohort] = useState(\"\");\r\n    const [password1, setPassword1] = useState(\"\");\r\n    const [password2, setPassword2] = useState(\"\");\r\n\r\n    const post_createAccount = (e) => {\r\n        e.preventDefault();\r\n        axios.post(\"http://localhost:8081/trainee/create\", {\r\n            username,\r\n            firstName: firstname,\r\n            secondName: lastname,\r\n            cohort: cohort,\r\n            password: password1,\r\n            traineeEmail: qaEmail\r\n            }\r\n        ).then(response =>{\r\n            console.log(response);\r\n            props.history.push(\"/Login\");\r\n        }).catch(error => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    //If password1 and password2 is exactly the same, then setPasswordTheSame as true - If it is false, we need to show an error on the page, if it is true, we can send this to the database.\r\n    const isPasswordSame = (password1, password2, e) => {\r\n        if (password1 === password2) {\r\n            post_createAccount(e)\r\n        }else{\r\n            alert(\"Your passwords do not match, please try again\");\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"signupDiv\">\r\n                <h1 className=\"signupHeading\">Create an account</h1>\r\n                <div>\r\n                    <form className=\"ml-3\" id=\"signupForm\">\r\n                        <input className=\"signupInput\" type=\"text\" id=\"first-name\" onChange={(e)=>firstName(e)} placeholder=\"Enter your first name\" required></input> <br></br>\r\n                        <input className=\"signupInput\" type=\"text\" id=\"last-name\" onChange={(e)=>lastName(e)} placeholder=\"Enter your last name\" required></input> <br></br>\r\n                        <input className=\"signupInput\" type=\"text\" id=\"qa_email\" onChange={(e)=>updateEmail(e)} placeholder=\"Enter your QA Email address\" required></input> <br></br>\r\n                        <input className=\"signupInput\" type=\"text\" id=\"username\" onChange={(e)=>updateUsername(e)} placeholder=\"Enter your username\" required></input> <br></br>\r\n                        <select className=\"signupInput\" name=\"cohort\" id=\"cohort\" onChange={e=>cohort(e.target.value)}>\r\n                            <option value=\"Dev Ops\">Dev Ops</option>\r\n                            <option value=\"Cloud Native\">Cloud Native</option>\r\n                            <option value=\"Software Engineer\">Software Engineer</option>\r\n                        </select>\r\n                        <input className=\"signupInput\" type=\"password\" id=\"password1\" onChange={(e)=>updatePassword1(e)} placeholder=\"Enter your password\" required></input> <br></br>\r\n                        <input className=\"signupInput\" type=\"password\" id=\"password2\" onChange={(e)=>updatePassword2(e)} placeholder=\"Enter your password\" required></input> <br></br>\r\n                        <button className=\"btn btn-primary\" id=\"signupButton\" type=\"submit\" onClick={(e) => isPasswordSame(password1, password2, e)}>Create an account</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default CreateAccount\r\n"]},"metadata":{},"sourceType":"module"}