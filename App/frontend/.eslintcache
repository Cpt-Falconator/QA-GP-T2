[{"C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\App.js":"1","C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\index.js":"2","C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\Components\\Create-Account-page\\CreateAccount.jsx":"3","C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\Components\\Footer.jsx":"4","C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\Components\\Login-page\\LoginPage.jsx":"5","C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\Components\\Header.jsx":"6","C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\reportWebVitals.js":"7","C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\Components\\About-page\\Aboutpage.jsx":"8"},{"size":792,"mtime":1606842347834,"results":"9","hashOfConfig":"10"},{"size":517,"mtime":1606839616685,"results":"11","hashOfConfig":"10"},{"size":3789,"mtime":1606925875316,"results":"12","hashOfConfig":"10"},{"size":186,"mtime":1606839616678,"results":"13","hashOfConfig":"10"},{"size":2704,"mtime":1606928741010,"results":"14","hashOfConfig":"10"},{"size":521,"mtime":1606843921564,"results":"15","hashOfConfig":"10"},{"size":375,"mtime":1606839616685,"results":"16","hashOfConfig":"10"},{"size":178,"mtime":1606839616678,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1foisni",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\App.js",[],["36","37"],"C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\index.js",[],"C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\Components\\Create-Account-page\\CreateAccount.jsx",["38"],"import React, {useState, Redirect} from 'react'\r\nimport axios from 'axios';\r\n\r\nconst CreateAccount = () => {\r\n\r\n    // setting the states\r\n    const [firstname, setFirstname] = useState(\"\");\r\n    const [lastname, setLastname] = useState(\"\");\r\n    const [qaEmail, setQaEmail] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password1, setPassword1] = useState(\"\");\r\n    const [password2, setPassword2] = useState(\"\");\r\n    const [passwordTheSame, setPasswordTheSame] = useState(false);\r\n\r\n    //Update all the values as they are changed in the input fields\r\n    const updateFirstName = (e) => {\r\n        e.preventDefault(); \r\n        setFirstname(e.target.value);\r\n    }\r\n\r\n    const updateLastName = (e) => {\r\n        e.preventDefault(); \r\n        setLastname(e.target.value);\r\n    }\r\n\r\n    const updateEmail = (e) => {\r\n        e.preventDefault(); \r\n        setQaEmail(e.target.value);\r\n    }\r\n    \r\n    const updateUsername = (e) => {\r\n        e.preventDefault(); \r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    const updatePassword1 = (e) => {\r\n        e.preventDefault(); \r\n        setPassword1(e.target.value);\r\n    }\r\n\r\n    const updatePassword2 = (e) => {\r\n        e.preventDefault(); \r\n        setPassword2(e.target.value);\r\n        isPasswordSame(password1,password2);\r\n    }\r\n\r\n    const post_createAccount = (e) => {\r\n        e.preventDefault();\r\n        axios.post(\"/create/trainee\", {\r\n            firstName: firstname,\r\n            lastName: lastname,\r\n            qaEmail: qaEmail,\r\n            username: username,\r\n            password: password1,\r\n            }\r\n        ).then(response =>{\r\n            console.log(response);\r\n            return  <Redirect  to=\"../Login\" />;\r\n        }).catch(error => {\r\n            console.log(error.data)\r\n        });\r\n    }\r\n\r\n    //If password1 and password2 is exactly the same, then setPasswordTheSame as true - If it is false, we need to show an error on the page, if it is true, we can send this to the database.\r\n    const isPasswordSame = (password1, password2) => {\r\n        if (password1 === password2) {\r\n            setPasswordTheSame(true)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"signupDiv\">\r\n                <h1 className=\"signupHeading\">Create an account</h1>\r\n                <div>\r\n                    <form className=\"ml-3\" id=\"signupForm\">\r\n                        <input className=\"signupInput\" type=\"text\" id=\"first-name\" onChange={(e)=>updateFirstName(e)} placeholder=\"Enter your first name\" required></input> <br></br>\r\n                        <input className=\"signupInput\" type=\"text\" id=\"last-name\" onChange={(e)=>updateLastName(e)} placeholder=\"Enter your last name\" required></input> <br></br>\r\n                        <input className=\"signupInput\" type=\"text\" id=\"qa_email\" onChange={(e)=>updateEmail(e)} placeholder=\"Enter your QA Email address\" required></input> <br></br>\r\n                        <input className=\"signupInput\" type=\"text\" id=\"username\" onChange={(e)=>updateUsername(e)} placeholder=\"Enter your username\" required></input> <br></br>\r\n                        <input className=\"signupInput\" type=\"password\" id=\"password1\" onChange={(e)=>updatePassword1(e)} placeholder=\"Enter your password\" required></input> <br></br>\r\n                        <input className=\"signupInput\" type=\"password\" id=\"password2\" onChange={(e)=>updatePassword2(e)} placeholder=\"Enter your password\" required></input> <br></br>\r\n                        <button className=\"btn btn-primary\" id=\"signupButton\" type=\"submit\" onClick={(e) => post_createAccount(e)}>Create an account</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default CreateAccount\r\n","C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\Components\\Footer.jsx",[],"C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\Components\\Login-page\\LoginPage.jsx",[],"C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\Components\\Header.jsx",[],"C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\CptFalconator\\OneDrive\\Desktop\\QA Work\\FinalProject\\QA-GP-T2\\App\\frontend\\src\\Components\\About-page\\Aboutpage.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":13,"column":12,"nodeType":"45","messageId":"46","endLine":13,"endColumn":27},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'passwordTheSame' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]